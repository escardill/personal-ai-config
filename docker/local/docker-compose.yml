name: personal-ai-local

services:
  # Database Services
  chromadb:
    image: chromadb/chroma:latest
    container_name: pai-chromadb
    ports:
      - "8000:8000"
    volumes:
      - ../../data/chromadb:/chroma/chroma
    environment:
      - CHROMA_SERVER_AUTHN_PROVIDER=none
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  neo4j:
    image: neo4j:4.4-community
    container_name: pai-neo4j
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    volumes:
      - ../../data/neo4j/data:/data
      - ../../data/neo4j/logs:/logs
      - ../../data/neo4j/conf:/conf
    environment:
      - NEO4J_AUTH=neo4j/personal_ai_password
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
      - NEO4J_dbms_memory_heap_initial_size=512m
      - NEO4J_dbms_memory_heap_max_size=2G
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "personal_ai_password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: pai-ollama
    ports:
      - "11434:11434"
    volumes:
      - ../../data/ollama:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=/root/.ollama/models
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 60s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

  # Personal AI Memory Service
  personal-ai-memory:
    build:
      context: ../../../personal-ai-memory
      dockerfile: Dockerfile
    container_name: pai-memory
    ports:
      - "8001:8001"
    volumes:
      - ../../data/logs:/app/logs
      - ../../configs/env/memory.env:/app/.env
    environment:
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=personal_ai_password
      - LOG_LEVEL=INFO
    depends_on:
      chromadb:
        condition: service_started
      neo4j:
        condition: service_healthy
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Personal AI Gateway Service  
  personal-ai-gateway:
    build:
      context: ../../../personal-ai-gateway
      dockerfile: Dockerfile
    container_name: pai-gateway
    ports:
      - "8080:8080"
    volumes:
      - ../../data/logs:/app/logs
      - ../../configs/env/gateway.env:/app/.env
    environment:
      - MEMORY_SYSTEM_URL=http://personal-ai-memory:8001
      - OLLAMA_BASE_URL=http://ollama:11434
      - HOST=0.0.0.0
      - PORT=8080
    depends_on:
      personal-ai-memory:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Open WebUI
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: pai-webui
    ports:
      - "3000:8080"
    volumes:
      - ../../data/open-webui:/app/backend/data
    environment:
      - WEBUI_NAME="Personal AI Assistant"
      - OPENAI_API_BASE_URL=http://personal-ai-gateway:8080/v1
      - ENABLE_RAG_HYBRID_SEARCH=true
      - ENABLE_RAG_WEB_LOADER_SSL_VERIFICATION=true
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - WEBUI_AUTH=true
      - WHISPER_MODEL=tiny
      - WHISPER_MODEL_AUTO_UPDATE=false
    depends_on:
      personal-ai-gateway:
        condition: service_healthy
    networks:
      - pai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          memory: 512M

  # Nginx (for local development with SSL)
  nginx:
    image: nginx:alpine
    container_name: pai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../configs/nginx/ssl:/etc/nginx/ssl:ro
      - ../../data/logs/nginx:/var/log/nginx
    depends_on:
      - open-webui
      - personal-ai-gateway
    networks:
      - pai-network
    restart: unless-stopped

networks:
  pai-network:
    driver: bridge
    name: personal-ai-network

volumes:
  chromadb_data:
    driver: local
  neo4j_data:  
    driver: local
  ollama_data:
    driver: local
  openwebui_data:
    driver: local