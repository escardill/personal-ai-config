# Personal AI Assistant - Caddy Configuration with Automatic HTTPS

# Main domain configuration
{$DOMAIN} {
    # Email for Let's Encrypt certificates
    tls {$EMAIL}

    # Security headers
    header {
        # HSTS
        Strict-Transport-Security max-age=31536000;
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss:; frame-src 'none'; object-src 'none';"
        # Other security headers
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy strict-origin-when-cross-origin
        # Remove server header
        -Server
    }

    # Rate limiting
    rate_limit {
        zone static {
            key {remote_host}
            window 1m
            events 60
        }
        zone api {
            key {remote_host}
            window 1m  
            events 30
        }
    }

    # Main OpenAI WebUI (root path)
    handle /* {
        rate_limit static
        reverse_proxy open-webui:8080 {
            # WebSocket support
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            
            # Health check
            health_uri /health
            health_interval 30s
            health_timeout 10s
            
            # Timeouts
            transport http {
                read_timeout 60s
                write_timeout 60s
                dial_timeout 10s
            }
        }
    }

    # Personal AI Gateway API endpoints
    handle /v1/* {
        rate_limit api
        reverse_proxy personal-ai-gateway:8080 {
            # Headers for API requests
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            
            # Health check
            health_uri /health
            health_interval 30s
            health_timeout 10s
            
            # For streaming LLM responses
            flush_interval -1
            
            # Extended timeouts for LLM processing
            transport http {
                read_timeout 120s
                write_timeout 120s
                dial_timeout 10s
            }
        }
    }

    # Gateway health and admin endpoints
    handle /health* {
        reverse_proxy personal-ai-gateway:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # WebSocket endpoints
    handle /ws/* {
        reverse_proxy personal-ai-gateway:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up Connection {>Connection}
            header_up Upgrade {>Upgrade}
        }
    }

    # Logging
    log {
        output file /var/log/caddy/access.log
        format json
        level INFO
    }

    # Error handling
    handle_errors {
        @404 expression {http.error.status_code} == 404
        handle @404 {
            respond "Page not found" 404
        }
        
        @5xx expression {http.error.status_code} >= 500
        handle @5xx {
            respond "Service temporarily unavailable" 503
        }
    }
}

# API subdomain (optional, for direct API access)
api.{$DOMAIN} {
    tls {$EMAIL}
    
    # Security headers (API-focused)
    header {
        Strict-Transport-Security max-age=31536000;
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        -Server
    }
    
    # All requests go to gateway
    reverse_proxy personal-ai-gateway:8080 {
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        
        # Health check
        health_uri /health
        health_interval 30s
        health_timeout 10s
        
        # Extended timeouts for LLM processing
        transport http {
            read_timeout 120s
            write_timeout 120s
            dial_timeout 10s
        }
    }
    
    log {
        output file /var/log/caddy/api-access.log
        format json
        level INFO
    }
}

# Redirect www to non-www
www.{$DOMAIN} {
    redir https://{$DOMAIN}{uri} permanent
}

# Global options
{
    # Email for Let's Encrypt
    email {$EMAIL}
    
    # Use Let's Encrypt production server
    # acme_ca https://acme-v02.api.letsencrypt.org/directory
    
    # Store certificates in container volume
    storage file_system {
        root /data/caddy
    }
    
    # Admin API (disabled for security)
    admin off
    
    # Auto HTTPS
    auto_https on
    
    # HTTPS redirect
    https_port 443
}

# Health check endpoint (internal)
:2019 {
    handle /health {
        respond "OK" 200
    }
}